# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Create JAR file
      run: |
          mkdir -p release
          cp target/*.jar release/app.jar
    - name: Upload build
      uses: svenstaro/upload-release-action@2.9.0
      if: github.event_name != 'pull_request'
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: release/*.jar
        tag: ${{ github.ref }}
        release_name: "jar build"
        body: ""
        file_glob: true
        overwrite: true
    - name: Deploy via SSH
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd /home/ubuntu/NoteSyncAPI
          sudo su
          curl -O https://github.com/eltonc0stadev/NoteSyncAPI/releases/latest/download/app.jar
          docker restart ApiDocker
